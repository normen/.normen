#!/usr/bin/env bash

wikipedia_summary(){
  artikelname=$(echo "$1"|jq --compact-output -r '.name')
  echo "Wikipedia summary for $artikelname.." >&2
  curl -Ls \
    --data-urlencode "format=json" \
    --data-urlencode "utf8=" \
    --data-urlencode "action=query" \
    --data-urlencode "prop=extracts" \
    --data-urlencode "exintro" \
    --data-urlencode "explaintext" \
    --data-urlencode "redirects=1" \
    --data-urlencode "titles=$artikelname" \
    https://de.wikipedia.org/w/api.php | \
    jq -r ".query.pages[].extract"
}

command_line_command(){
  command_line=$(echo "$1"|jq --compact-output -r '.command')
  printf "\e[34mCommand: \e[0m$command_line\n" >&2
  read -p $'\e[31mExecute?\e[0m ' -n 1 -r
  echo >&2
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    eval $command_line 2>&1
  fi
}

document_search(){
  dokumentname=$(echo "$1"|jq --compact-output -r '.name')
  suche=$(echo "$1"|jq --compact-output -r '.search')
  ~/.normen/bin/gpt-memory get-document-memory "$dokumentname" "$suche"
}

document_lines(){
  dokumentname=$(echo "$1"|jq --compact-output -r '.name')
  line_number=$(echo "$1"|jq --compact-output -r '.line_number')
  surrounding=$(echo "$1"|jq --compact-output -r '.surrounding')
  ~/.normen/bin/gpt-memory get-document-memory-lines "$dokumentname" "$line_number" "$surrounding"
}

core_functions(){
  echo '[
    {
      "name": "wikipedia_summary",
      "description": "Holt eine Zusammenfassung für einen bestimmten Wikipedia-Artikel",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Der Name des Artikels, muss auf Wikipedia existieren. Generische Namen wie `Deutschland` funktionieren besser als `Einwohnerzahl von Deutschland`."
          }
        },
        "required": ["name"]
      }
    },
    {
      "name": "command_line_command",
      "description": "Führt einen Befehl auf der bash shell aus und gibt den gesamten output von stdout und stderr zurück.",
      "parameters": {
        "type": "object",
        "properties": {
          "command": {
            "type": "string",
            "description": "Der Befehl inklusive der Argumente."
          }
        },
        "required": ["command"]
      }
    },
    {
      "name": "document_search",
      "description": "Sucht mit Embeddings in einem Dokument und gibt ein JSON array mit relevanten Zeilen im Dokument zurück.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Der Name des Dokuments, ein kompletter Pfad mit Dateiname und Endung. z.B. `"
          },
          "search": {
            "type": "string",
            "description": "Der oder die Suchbegriffe die im Dokument per Embeddings gesucht werden soll."
          }
        },
        "required": ["name", "search"]
      }
    },
    {
      "name": "document_lines",
      "description": "Holt einen Teil eines Dokuments auf Basis einer angegebenen Zeilennummer.",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Der Name des Dokuments, ein kompletter Pfad mit Dateiname und Endung."
          },
          "line_number": {
            "type": "number",
            "description": "Die angefragte Zeilennummer die vom Dokument ausgeben werden soll."
          },
          "surrounding": {
            "type": "number",
            "description": "Die Anzahl von Zeilen vor und nach der angefragten Zeile die ausgegeben werden sollen. Leere Zeilen werden mit gezählt aber nicht mit ausgegeben, daher sollten immer ein paar Zeilen zusätzlich ausgegeben werden."
          }
        },
        "required": ["name", "line_number", "surrounding"]
      }
    }
  ]'
}

