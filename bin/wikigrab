#!/usr/bin/env perl
use strict;
use warnings;
use v5.12;
use utf8;
use File::Temp qw/ tempfile tempdir /;
# external
use Mojo::JSON qw(j);
no warnings "experimental";
#binmode STDOUT, ':utf8';

my $url = "https://en.wikipedia.org";
my $search = "test";
my $width = 50;

# parse arguments
while(my $arg = shift(@ARGV)){
  given($arg){
    when("-u"){ $url = shift(@ARGV); }
    when("-w"){ $width = shift(@ARGV); }
    when("-f"){ $search = urlize(shift(@ARGV)); }
  }
}
my $raw = qx{curl -H "Content-Type: application/x-www-form-urlencoded; charset=utf-8" -sL '$url/w/api.php?action=parse&format=json&page=$search'};
my $page = j $raw;
#print $raw unless $page;
die "No JSON" unless $page;
my $htmldata = $page->{parse}->{text}->{"*"};
#print $page unless $htmldata;
die "No data in JSON" unless $htmldata;
my ($fh, $filename) = tempfile( CLEANUP => 1 );
binmode( $fh, ":utf8" );
print $fh $htmldata;
close $fh;
my $plain = qx{pandoc --columns $width -f html -t plain $filename};
unlink($filename);
#utf8::decode($plain);
say $plain;

sub urlize {
  my ($rv) = @_;
  $rv =~ s/([^A-Za-z0-9])/sprintf("%%%2.2X", ord($1))/ge;
  return $rv;
}

