#
# weechat -- plugins.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use commands like /set or /fset to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart/
#

[var]
fifo.fifo = "on"
guile.check_license = "off"
javascript.check_license = "off"
lua.check_license = "off"
perl.atcomplete.enabled = "on"
perl.buddylist.buddy.on.server = "on"
perl.buddylist.buddy.on.server.color = "lightgreen"
perl.buddylist.buddylist = "%h/buddylist.txt"
perl.buddylist.callback.timeout = "60"
perl.buddylist.check.buddies = "20"
perl.buddylist.color.away = "cyan"
perl.buddylist.color.default = "default"
perl.buddylist.color.number = "lightred"
perl.buddylist.color.offline = "blue"
perl.buddylist.color.online = "yellow"
perl.buddylist.color.server = "white"
perl.buddylist.color.server.offline = "darkgray"
perl.buddylist.display.original.nick = "off"
perl.buddylist.display.social.net = "on"
perl.buddylist.display.social.net.color = "yellow"
perl.buddylist.hide.bar = "always"
perl.buddylist.hide.buddy.if.offline = "off"
perl.buddylist.hide.server.if.buddies.offline = "off"
perl.buddylist.hide.servername.in.buddylist = "off"
perl.buddylist.show.query = "on"
perl.buddylist.sort = "default"
perl.buddylist.text.away = ""
perl.buddylist.text.color = "white"
perl.buddylist.text.offline = ""
perl.buddylist.text.online = ""
perl.buddylist.use.redirection = "on"
perl.check_license = "off"
perl.coords.color.selection = "reverse.brown,black"
perl.coords.color.selection_cursor = "reverse.underline"
perl.coords.color.url_highlight = "reverse.underline"
perl.coords.color.url_highlight_active = "reverse.brown,black"
perl.coords.copybuf_short_name = "©"
perl.coords.hyper_channels = "off"
perl.coords.hyper_nicks = "off"
perl.coords.hyper_prefix = "on"
perl.coords.hyper_show = "url"
perl.coords.mouse.click_select_pane = "on"
perl.coords.mouse.click_through_pane = "off"
perl.coords.mouse.close_on_release = "110"
perl.coords.mouse.copy_on_click = "on"
perl.coords.mouse.handle_scroll = "off"
perl.coords.mouse.scroll_inactive_pane = "on"
perl.coords.mouse.url_open_2nd_click = "off"
perl.coords.url_braces = "[({<"''">})]"
perl.coords.url_non_beginnings = "\W"
perl.coords.url_non_endings = "[.,;:?!_-]"
perl.coords.url_regex = "\w+://\S+ | (?:^|(?<=\s))(?:\S+\.){2,}\w{2,5}(?:/\S*|(?=\s)|$) | (?:^|(?<=\s))(?:\S+\.)+\w{2,5}/(?:\S+)?"
perl.coords.use_nick_menu = "off"
perl.coords.xterm_compatible = "rxvt-uni"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "off"
perl.highmon.color_buf = "on"
perl.highmon.first_run = "true"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "off"
perl.highmon.merge_private = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.short_names = "off"
perl.multiline.char = "↩"
perl.multiline.hide_magic_nl = "on"
perl.multiline.ipl = "on"
perl.multiline.lead_linebreak = "on"
perl.multiline.magic = "‼"
perl.multiline.magic_enter_time = "1000"
perl.multiline.magic_paste_only = "off"
perl.multiline.modify_keys = "on"
perl.multiline.paste_lock = "1"
perl.multiline.send_empty = "on"
perl.multiline.tab = "──▶▏"
perl.multiline.weechat_paste_fix = "on"
perl.pushover.blacklist = ""
perl.pushover.enabled = "on"
perl.pushover.only_if_away = "off"
perl.pushover.only_if_inactive = "off"
perl.pushover.priority = ""
perl.pushover.rate_limit = "1"
perl.pushover.redact_priv_msg = "off"
perl.pushover.short_name = "off"
perl.pushover.show_highlights = "on"
perl.pushover.show_priv_msg = "on"
perl.pushover.sound = ""
perl.pushover.token = "${sec.data.pushover}"
perl.pushover.user = "${sec.data.pushover_user}"
perl.pushover.verbose = "1"
python.autojoin.autosave = "on"
python.buffer_autohide.exemptions = ""
python.buffer_autohide.hide_inactive = "off"
python.buffer_autohide.hide_private = "off"
python.buffer_autohide.keep_open = "off"
python.buffer_autohide.keep_open_timeout = "60 * 1000"
python.buffer_autohide.unhide_low = "off"
python.bufsize.count_filtered_lines = "on"
python.bufsize.format = "${color:yellow}%P${color:default}⋅%{${color:yellow}%A${color:default}⇵${color:yellow}%C${color:default}/}${color:yellow}%L"
python.bufsize.show_scroll = "on"
python.check_license = "off"
python.collapse_channel.activity = "off"
python.collapse_channel.channel_exclude = ""
python.collapse_channel.hotlist = "4"
python.collapse_channel.server_exclude = ""
python.collapse_channel.single_channel_exclude = ""
python.go.auto_jump = "off"
python.go.buffer_number = "on"
python.go.color_name = "black,cyan"
python.go.color_name_highlight = "red,cyan"
python.go.color_name_highlight_selected = "red,brown"
python.go.color_name_selected = "black,brown"
python.go.color_number = "yellow,magenta"
python.go.color_number_selected = "yellow,red"
python.go.fuzzy_search = "off"
python.go.message = "Go to: "
python.go.short_name = "off"
python.go.sort = "number,beginning"
python.go.use_core_instead_weechat = "on"
python.grep.clear_buffer = "off"
python.grep.default_tail_head = "10"
python.grep.go_to_buffer = "on"
python.grep.log_filter = ""
python.grep.max_lines = "4000"
python.grep.show_summary = "on"
python.grep.size_limit = "2048"
python.grep.timeout_secs = "300"
python.keepnick.command = "/nick %s"
python.keepnick.debug = "off"
python.keepnick.delay = "600"
python.keepnick.nickserv = "/msg -server $server NICKSERV IDENTIFY $passwd"
python.keepnick.serverlist = ".*"
python.keepnick.text = "Nickstealer left Network: $server!"
python.keepnick.timeout = "60"
python.responsive_layout.debug = "off"
python.responsive_layout.default_nicklist = "on"
python.screen_away.away_suffix = ""
python.screen_away.command_on_attach = "/trigger disable hidt"
python.screen_away.command_on_detach = "/trigger disable hidt"
python.screen_away.ignore = ""
python.screen_away.ignore_relays = "off"
python.screen_away.interval = "5"
python.screen_away.message = ""
python.screen_away.no_output = "on"
python.screen_away.set_away = "on"
python.screen_away.socket_file = ""
python.screen_away.time_format = "since %Y-%m-%d %H:%M:%S%z"
python.text_item.interval = "0"
python.text_replace.replacement_pairs = ""
python.text_replace.replacement_prefixes = ":=/"
python.text_replace.replacement_words = ""
python.tmux_env.exclude = ""
python.tmux_env.include = "*,-*"
python.tmux_env.interval = "30"
python.urlbar.ignore = "grep"
python.urlbar.remember_amount = "25"
python.urlbar.show_buffername = "on"
python.urlbar.show_index = "on"
python.urlbar.show_nick = "on"
python.urlbar.show_timestamp = "on"
python.urlbar.time_format = "%H:%M"
python.urlbar.use_popup = "on"
python.urlbar.visible_amount = "5"
python.urlbar.visible_seconds = "5"
python.vimode.copy_clipboard_cmd = "tmux load-buffer -"
python.vimode.imap_esc = ""
python.vimode.imap_esc_timeout = "100"
python.vimode.is_keyword = "a-zA-Z0-9_À-ÿ"
python.vimode.line_number_prefix = ""
python.vimode.line_number_suffix = " "
python.vimode.mode_indicator_cmd_color = "black"
python.vimode.mode_indicator_cmd_color_bg = "cyan"
python.vimode.mode_indicator_insert_color = "black"
python.vimode.mode_indicator_insert_color_bg = "lightblue"
python.vimode.mode_indicator_normal_color = "black"
python.vimode.mode_indicator_normal_color_bg = "gray"
python.vimode.mode_indicator_prefix = ""
python.vimode.mode_indicator_replace_color = "black"
python.vimode.mode_indicator_replace_color_bg = "red"
python.vimode.mode_indicator_search_color = "black"
python.vimode.mode_indicator_search_color_bg = "magenta"
python.vimode.mode_indicator_suffix = ""
python.vimode.no_warn = "on"
python.vimode.paste_clipboard_cmd = "tmux save-buffer -"
python.vimode.search_vim = "off"
python.vimode.user_command_mapping = "ö"
python.vimode.user_mappings = "{"\u0001U": "/window scroll_up<CR>/window scroll_up<CR>/window scroll_up<CR>/window scroll_up<CR>", "H": "/bar scroll nicklist * y-10", "L": "/bar scroll nicklist * y+10", "\u0001D": "/window scroll_down<CR>/window scroll_down<CR>/window scroll_down<CR>/window scroll_down<CR>", "\u0001N": "/bar toggle nicklist<CR>", "\u0001X": "/input switch_active_buffer<CR>", "k": "/window scroll_up", "\u0001E": "/bar toggle buflist", "\u00f6": "<nop>", "j": "/window scroll_down", "\u0001Y": ":autojoin --run<CR>:w<CR>", "\u0001A": ":b &bitlbee<CR>ichat list discord<CR>ichat add discord Dis.cord #ds-crd"}"
python.vimode.user_mappings_noremap = ""
ruby.check_license = "off"
tcl.check_license = "off"

[desc]
perl.atcomplete.enabled = "enable completion of nicks starting with @ (default: "on")"
perl.buddylist.buddy.on.server = "show buddy who is connected to a server, but not visiting the same channel(s) (default: on)"
perl.buddylist.buddy.on.server.color = "color for online buddy but not visiting the same channel(s) (default: lightgreen)"
perl.buddylist.buddylist = "path/file-name to store your buddies. "%h" will be replaced by WeeChat home (by default: ~/.weechat)"
perl.buddylist.callback.timeout = "time in seconds to wait for answer from server. (default: 60)"
perl.buddylist.check.buddies = "time in seconds to send a /whois request to server. Be careful not to flood server (default: 20)"
perl.buddylist.color.away = "color for away buddies"
perl.buddylist.color.default = "fall back color. (default: standard weechat color)"
perl.buddylist.color.number = "color for channel number (default: lightred). If empty, channel list option is off"
perl.buddylist.color.offline = "color for offline buddies"
perl.buddylist.color.online = "color for online buddies"
perl.buddylist.color.server = "color for servername"
perl.buddylist.color.server.offline = "color for disconnected server (default: hide)"
perl.buddylist.display.original.nick = "display original nickname even if buddy changed his /nick (you have to add new nick to buddylist (default: off)"
perl.buddylist.display.social.net = "using bitlbee, buddies will be sorted in sublists with social-network name (eg. msn/jabber/facebook)(default: on)"
perl.buddylist.display.social.net.color = "color for social-network name (default: yellow)"
perl.buddylist.hide.bar = "hides buddylist bar when all servers with added buddies are offline (on = default, always = buddylist bar will be hidden (for example if you want to add item 'buddylist' to 'weechat.bar.status.items', off = buddylist bar will not be hidden))"
perl.buddylist.hide.buddy.if.offline = "hide buddy if offline (default: off)"
perl.buddylist.hide.server.if.buddies.offline = "hides server when all buddies are offline for this server (default: off)"
perl.buddylist.hide.servername.in.buddylist = "hide the servername in buddylist. If "on" only nicks will be displayed in buddylist (default: off)"
perl.buddylist.show.query = "displays a query buffer in front of the channel list"
perl.buddylist.sort = "sort method for buddylist (default = buddylist will be sort by nickname, status = buddylist will be sort by status (online, away, offline))"
perl.buddylist.text.away = "optional away text in buddylist (sort method has to be 'status')"
perl.buddylist.text.color = "color for optional online/away/offline-text in buddylist (default: white)"
perl.buddylist.text.offline = "optional offline text in buddylist (sort method has to be 'status')"
perl.buddylist.text.online = "optional online text in buddylist (sort method has to be 'status')"
perl.buddylist.use.redirection = "using redirection to get status of buddies (needs weechat >=0.3.4) (default: on)"
perl.coords.clipboard_command = "if you set this, an external program may be executed to store the selection or URL. begin with | to pipe into program or use parameters %s for text, %q for quoted text or %x for quoted escape sequence."
perl.coords.color.selection = "the color of the currently selected text in selection mode"
perl.coords.color.selection_cursor = "the weechat color and/or attribute to be used for the text cursor."
perl.coords.color.url_highlight = "the weechat color and/or attribute to be used for highlighting URLs in the copy window. seperate multiple attributes with ."
perl.coords.color.url_highlight_active = "the same as color.url_highlight except for the currently (using arrow keys) selected link."
perl.coords.copybuf_short_name = "short_name to use for coords buffer. it is set to the copy sign by default to not disturb buffers bar width, set to the empty string to have window position and size shown"
perl.coords.copywin_custom_keys = "You can define custom key bindings to use inside the copywin here. syntax is: command-letter:weechat-keycode. available commands: -+>< (up/down/left/right) fbae (forward word/backward word/beginning/end) !@ (open/start selection) /UNCunc (toggle highlights/urls/nicks/channels) q (close window)"
perl.coords.hyper_channels = "make channels to hyperlinks for join"
perl.coords.hyper_nicks = "make nicks to hyperlinks for menu/pm"
perl.coords.hyper_show = "set to types of hyperlinks that are shown by default"
perl.coords.mouse.click_select_pane = "set to on to use the mouse to select windows"
perl.coords.mouse.click_through_pane = "set to on if copy_on_click should work on inactive windows (works only if click_select_pane is set too). set to off if window needs to be active"
perl.coords.mouse.close_on_release = "set to on or a delay (in ms) to autoclose coords buffer opened by copy_on_click on button release, set to off if the coords buffer should stay open after click"
perl.coords.mouse.copy_on_click = "set to on if it should be possible to directly click on URLs and select text, set to off if mouse should only work in open coords buffer"
perl.coords.mouse.handle_scroll = "set to on if coords should handle scrolling inside windows. the script will try to guess non-chat areas to be nicklist, top to be title and bottom to be status and scroll the respective bars if the cursor is in that area. set to off if scrolling should be handled by the default mouse.pl script or another mouse scrolling script"
perl.coords.mouse.scroll_inactive_pane = "set to on if inactive windows should be scrolled instead of active window if the mouse cursor is over it (requires handle_scroll to be enabled)"
perl.coords.mouse.url_open_2nd_click = "if this is set, URLs are only opened when clicked twice (in the same incarnation of a coords buffer) instead of on first click. it can be set to a delay (in ms) that will be added to the close_on_release delay if the script is waiting for a second click on the URL to happen"
perl.coords.url_braces = "parenthesis-like characters which nest and should be excluded when found around an URL. make sure the variable setting nests properly when modifying this."
perl.coords.url_non_endings = "this is matched against the end of a link and removed"
perl.coords.url_regex = "a regular expression to identify URLs in the text. See perlre for more information about Perl regular expressions."
perl.coords.use_nick_menu = "use nick menu when opening nick hyperlink (see hyper_nicks, requires menu.pl script). otherwise open private message. this setting only applies to text mode selection, for mouse see mouse.nick_2nd_click"
perl.multiline.char = "character(s) which should be displayed to indicate end of line"
perl.multiline.hide_magic_nl = "whether the new line inserted by magic enter key will be hidden"
perl.multiline.ipl = "this setting controls override of ctrl-M (enter key) by script. Turn it off if you don't want multiline.pl to set and re-set the key binding."
perl.multiline.lead_linebreak = "if turned on, multi-line messages always start on a new line"
perl.multiline.magic = "indicator displayed when message will be sent soon"
perl.multiline.magic_enter_time = "delay after pressing enter before sending automatically (in ms), or 0 to disable"
perl.multiline.magic_paste_only = "only use multi-line messages for multi-line pastes (multi-line on enter is disabled by this)"
perl.multiline.modify_keys = "if turned on, cursor keys are modified so that they respect line boundaries instead of treating the whole multi-line message as a single line"
perl.multiline.paste_lock = "time-out to detect pastes (disable the weechat built-in paste detection if you want to use this)"
perl.multiline.send_empty = "set to on to automatically disregard enter key on empty line"
perl.multiline.tab = "character(s) which should be displayed instead of Tab key character"
perl.multiline.weechat_paste_fix = "disable ctrl-J binding when paste is detected to stop silly weechat sending out pastes without allowing to edit them"
perl.pushover.blacklist = "Comma separated list of buffers (full name) to blacklist for notifications (wildcard "*" is allowed, name beginning with "!" is excluded) (default: "")"
perl.pushover.enabled = "Turn script on or off (default: "on")"
perl.pushover.only_if_away = "Notify only if away status is active (default: "off")"
perl.pushover.only_if_inactive = "Notify only if buffer is not the active (current) buffer (default: "off")"
perl.pushover.priority = "priority (empty for default) (default: "")"
perl.pushover.rate_limit = "Rate limit in seconds (0 = unlimited), will send a maximum of 1 notification per time limit (default: "0")"
perl.pushover.redact_priv_msg = "When receiving private message notifications, hide the actual message text (default: "off")"
perl.pushover.short_name = "Use short buffer name in notification (default: "off")"
perl.pushover.show_highlights = "Notify on highlights (default: "on")"
perl.pushover.show_priv_msg = "Notify on private messages (default: "on")"
perl.pushover.sound = "Sound (empty for default) (default: "")"
perl.pushover.token = "pushover API token/key (You may feel free to use your own token, so you get your own monthly quota of messages without being affected by other users. See also: https://pushover.net/faq#overview-distribution ) (default: "ajEX9RWhxs6NgeXFJxSK2jmpY54C9S")"
perl.pushover.user = "pushover user key (default: "")"
perl.pushover.verbose = "Verbosity level (0 = silently ignore any errors, 1 = display brief error, 2 = display full server response) (default: "1")"
python.buffer_autohide.exemptions = "An enumeration of buffers that should not get hidden (default: "")"
python.buffer_autohide.hide_inactive = "Hide inactive buffers (default: "off")"
python.buffer_autohide.hide_private = "Hide private buffers (default: "off")"
python.buffer_autohide.keep_open = "Keep a buffer open for a short amount of time (default: "off")"
python.buffer_autohide.keep_open_timeout = "Timeout in milliseconds for how long a selected buffer should be kept around (default: "60 * 1000")"
python.buffer_autohide.unhide_low = "Unhide a buffer when a low priority message (like JOIN, PART, etc.) has been received (default: "off")"
python.bufsize.count_filtered_lines = "filtered lines will be count in item. (default: 'on')"
python.bufsize.format = "format for items to display in bar, possible items: %P = percent indicator, %A = number of lines below last line, %L = lines counter, %C = current line %F = number of filtered lines (note: using WeeChat >= 0.4.2, content is evaluated, so you can use colors with format "${color:xxx}", see /help eval) (default: '${color:yellow}%P${color:default}⋅%{${color:yellow}%A${color:default}⇵${color:yellow}%C${color:default}/}${color:yellow}%L')"
python.bufsize.show_scroll = "always show the scroll indicator number,even if its 0 (item %A), if option is off the scroll indicator will be hidden like the item "scroll" (default: 'on')"
python.collapse_channel.activity = "show channels with activity only (see option hotlist). all exclude options will be ignored (default: "off")"
python.collapse_channel.channel_exclude = "exclude some channel, comma separated list. This is server independent (wildcard "*" is allowed) (default: "")"
python.collapse_channel.hotlist = "unhide buffer by activity, when buffer is added to hotlist (0=off, 1=message, 2=private message, 3=highlight, 4=all) (default: "4")"
python.collapse_channel.server_exclude = "exclude some server, comma separated list (wildcard "*" is allowed) (default: "")"
python.collapse_channel.single_channel_exclude = "exclude specific channels on specific server, space separated list (eg. freenode.#weechat) (default: "")"
python.go.auto_jump = "automatically jump to buffer when it is uniquely selected (default: "off")"
python.go.buffer_number = "display buffer number (default: "on")"
python.go.color_name = "color for buffer name (not selected) (default: "black,cyan")"
python.go.color_name_highlight = "color for highlight in buffer name (not selected) (default: "red,cyan")"
python.go.color_name_highlight_selected = "color for highlight in a selected buffer name (default: "red,brown")"
python.go.color_name_selected = "color for a selected buffer name (default: "black,brown")"
python.go.color_number = "color for buffer number (not selected) (default: "yellow,magenta")"
python.go.color_number_selected = "color for selected buffer number (default: "yellow,red")"
python.go.fuzzy_search = "search buffer matches using approximation (default: "off")"
python.go.message = "message to display before list of buffers (default: "Go to: ")"
python.go.short_name = "display and search in short names instead of buffer name (default: "off")"
python.go.sort = "comma-separated list of keys to sort buffers (the order is important, sorts are performed in the given order): name = sort by name (or short name),  (default: "number,beginning")"
python.go.use_core_instead_weechat = "use name "core" instead of "weechat" for core buffer (default: "off")"
python.keepnick.command = "This command will be used to rename your nick ("%s" will be replaced with your nickname) (default: "/nick %s")"
python.keepnick.debug = "When enabled, will output verbose debugging information during script operation (default: "off")"
python.keepnick.delay = "delay (in seconds) to look at occupied nick (0 means OFF). It is not recommended to flood the server with /ison requests) (default: "600")"
python.keepnick.nickserv = "Use SASL authentification, if possible. This command will be used to IDENTIFY you on server (following placeholder can be used: "$server" for servername; "$passwd" for password). You can create an option for every server to store password: "plugins.var.python.keepnick.<servername>.password", otherwise the "irc.server.<servername>.password" option will be used (this option is evaluated). (default: "/msg -server $server NICKSERV IDENTIFY $passwd")"
python.keepnick.serverlist = "comma separated list of servers to look at. Try to register a nickname on server (see: /msg NickServ help).regular expression are allowed (eg. ".*" = matches ALL server,"freen.*" = matches freenode, freenet....) (this option is evaluated). (default: "")"
python.keepnick.text = "text to display, when you get your nick back. ("$server and $nick" can be used) (this option is evaluated). (default: "Nickstealer left Network: $server!")"
python.keepnick.timeout = "timeout (in seconds) to wait for an answer from server. (default: "60")"
python.responsive_layout.debug = "Script debug output (default: off)"
python.responsive_layout.default_nicklist = "Global setting to always show nicklist when layout switches. (default: on)"
python.screen_away.away_suffix = "What to append to your nick when you're away."
python.screen_away.command_on_attach = "Commands to execute on attach, separated by semicolon"
python.screen_away.command_on_detach = "Commands to execute on detach, separated by semicolon"
python.screen_away.ignore = "Comma-separated list of servers to ignore."
python.screen_away.ignore_relays = "Only check screen status and ignore relay interfaces"
python.screen_away.interval = "How often in seconds to check screen status"
python.screen_away.message = "Away message"
python.screen_away.no_output = "no detach/attach information will be displayed in buffer"
python.screen_away.set_away = "Set user as away."
python.screen_away.socket_file = "Socket file to use (leave blank to auto-detect)"
python.screen_away.time_format = "time format append to away message"
python.text_item.interval = "How often (in seconds) to force an update of all items. 0 means deactivated"
python.vimode.copy_clipboard_cmd = "command used to copy to clipboard; must read input from stdin (default: "xclip -selection c")"
python.vimode.imap_esc = "use alternate mapping to enter Normal mode while in Insert mode; having it set to 'jk' is similar to `:imap jk <Esc>` in vim (default: "")"
python.vimode.imap_esc_timeout = "time in ms to wait for the imap_esc sequence to complete (default: "1000")"
python.vimode.is_keyword = "characters recognized as part of a word (default: "a-zA-Z0-9_À-ÿ")"
python.vimode.line_number_prefix = "prefix for line numbers (default: "")"
python.vimode.line_number_suffix = "suffix for line numbers (default: " ")"
python.vimode.mode_indicator_cmd_color = "color for mode indicator in Command mode (default: "white")"
python.vimode.mode_indicator_cmd_color_bg = "background color for mode indicator in Command mode (default: "cyan")"
python.vimode.mode_indicator_insert_color = "color for mode indicator in Insert mode (default: "white")"
python.vimode.mode_indicator_insert_color_bg = "background color for mode indicator in Insert mode (default: "blue")"
python.vimode.mode_indicator_normal_color = "color for mode indicator in Normal mode (default: "white")"
python.vimode.mode_indicator_normal_color_bg = "background color for mode indicator in Normal mode (default: "gray")"
python.vimode.mode_indicator_prefix = "prefix for the bar item mode_indicator (default: "")"
python.vimode.mode_indicator_replace_color = "color for mode indicator in Replace mode (default: "white")"
python.vimode.mode_indicator_replace_color_bg = "background color for mode indicator in Replace mode (default: "red")"
python.vimode.mode_indicator_search_color = "color for mode indicator in Search mode (default: "white")"
python.vimode.mode_indicator_search_color_bg = "background color for mode indicator in Search mode (default: "magenta")"
python.vimode.mode_indicator_suffix = "suffix for the bar item mode_indicator (default: "")"
python.vimode.no_warn = "don't warn about problematic keybindings and tmux/screen (default: "off")"
python.vimode.paste_clipboard_cmd = "command used to paste clipboard; must output content to stdout (default: "xclip -selection c -o")"
python.vimode.search_vim = "allow n/N usage after searching (requires an extra <Enter> to return to normal mode) (default: "off")"
python.vimode.user_command_mapping = "user alternate mapping to enter Command mode while in Normal mode (default: ":")"
python.vimode.user_mappings = "see the `:nmap` command in the README for more info; please do not modify this field manually unless you know what you're doing (default: "")"
python.vimode.user_mappings_noremap = "see the `:nnoremap` command in the README for more info; please do not modify this field manually unless you know what you're doing (default: "")"
